/**
* 文本颜色
* @param {string} 主题色变量名
*/
@mixin textColor($params) {
  @include useTheme {
    color: getVar($params)
  }
}

/**
* 背景颜色或图片
* @param {string} 主题色变量名
*/
@mixin background($params) {
  @include useTheme {
    background: getVar($params);
    background-repeat: no-repeat;
    background-size: 100% 100%;
  }
}

/**
* 溢出省略号
* @param {Number} 行数
*/
@mixin ellipsis($rowCount: 1) {
  @if $rowCount <=1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  @else {
    min-width: 0;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: $rowCount;
    -webkit-box-orient: vertical;
  }
}

@mixin max() {
  width: 100%;
  height: 100%;
}

/**
* position 布局
*/
@mixin position($position: relative) {
  position: $position;
}

@mixin relative($isMax: no-max) {
  @include position(relative);
  @if $isMax == max {
    & > * {
      @include absolute(max)
    }
  }
}

@mixin absolute($isMax: no-max, $left: 0, $top: 0, $right: 0, $bottom: 0) {
  @include position(absolute);
  @if $isMax == max {
    @include max;
    left: $left;
    top: $top;
    @if $right {
      right: $right;
    }
    @if $bottom {
      bottom: $bottom;
    }
  }
}

/**
* 文字样式
*/
$font-map: (
    super: 20px,
    large: 18px,
    middle: 16px,
    small: 14px,
    mini: 12px,
);

@mixin font($font-size: middle, $color: $text-color, $font-fmaily: none) {
    @each $font-key, $font-value in $font-map {
        @if $font-size == $font-key {
            font-size: $font-value;
        }
    }
    @include useTheme {
        color: getVar($color);
    }
    @if $font-fmaily != none {
        font-family: $font-fmaily;
    }
}
